{"version":3,"sources":["components/header.jsx","components/form.jsx","App.js","index.js"],"names":["Header","state","Fragment","Navbar","dark","color","expand","className","Jumbotron","style","textAlign","Component","Forms","city","temperature","weather_descriptions","weather_icons","location","handleSubmit","event","preventDefault","console","log","url","process","fetch","then","response","status","json","data","error","setState","current","request","query","catch","err","handleInputChange","name","target","value","handleDisplay","Card","CardImg","top","width","height","src","alt","CardBody","CardTitle","tag","CardSubtitle","CardText","styles","marginTop","Form","onSubmit","this","FormGroup","row","Col","Label","htmlFor","md","Input","type","id","placeholder","required","onChange","size","Button","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.416e5e24.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Jumbotron, Navbar } from \"reactstrap\";\r\n\r\nclass Header extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar dark color=\"primary\" expand=\"md\">\r\n          <div className=\"container\">\r\n            <Jumbotron>\r\n              <header>\r\n                <div className=\"row row-header\">\r\n                  <div className=\"col-12\">\r\n                    <h1 style={{ color: \"white\", textAlign: \"center\" }}>\r\n                      Weather Forecast\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n              </header>\r\n            </Jumbotron>\r\n          </div>\r\n        </Navbar>\r\n        <br />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","// create a main component and lift up the state to that component\r\n// create protected routes for card\r\n// fetch api request\r\n// as for now just the api request remember you have installed react-router-dom\r\n// read about componentDidMount\r\n// make sure to use async and await (Learn asynchronous programming today)\r\n// extract all the value and display them on a Card\r\n// lift up the state\r\n// make all error co\r\n\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\n\r\nclass Forms extends Component {\r\n  state = {\r\n    city: null,\r\n    temperature: null,\r\n    weather_descriptions: null,\r\n    weather_icons: null,\r\n    location: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    // ... get form data\r\n    // ... submit to an API\r\n    event.preventDefault();\r\n    console.log(this.state.city);\r\n\r\n    const baseurl = \"http://api.weatherstack.com/current\";\r\n    const url = `${baseurl}?access_key=${process.env.REACT_APP_API_KEY}&query=${this.state.city}`;\r\n\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log(\r\n            \"Looks like there was a problem. Status Code: \" + response.status\r\n          );\r\n        }\r\n\r\n        response.json().then((data) => {\r\n          if (data.error) {\r\n            console.log(\"Something went wrong. Check if city name is valid\");\r\n          }\r\n          console.log(data);\r\n          this.setState({ temperature: data.current.temperature });\r\n          this.setState({\r\n            weather_descriptions: data.current.weather_descriptions[0],\r\n          });\r\n          this.setState({ location: data.request.query });\r\n          this.setState({ weather_icons: data.current.weather_icons[0] });\r\n\r\n          // Uncomment this\r\n          console.log(this.state.temperature);\r\n          console.log(this.state.weather_descriptions);\r\n          console.log(this.state.weather_icons);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Fetch Error: \", err);\r\n      });\r\n    return;\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    const name = event.target.name;\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleDisplay = () => {\r\n    if (this.state.weather_icons !== null) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"col-12 col-md-9\">\r\n            <Card>\r\n              <CardImg\r\n                top\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                src={this.state.weather_icons}\r\n                alt=\"Card image cap\"\r\n              />\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\">{this.state.city}</CardTitle>\r\n                <CardSubtitle tag=\"h6\">{this.state.location}</CardSubtitle>\r\n                <CardText>\r\n                  Weather in C: {this.state.temperature}\r\n                  <br />\r\n                  Description: {this.state.weather_descriptions}\r\n                </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      <div>\r\n        <h6>LOADING...</h6>\r\n      </div>;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"col-12 row row-content\" styles={{ marginTop: 10 }}>\r\n            <h3>Enter the city to get the forecast</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"col-12\">\r\n            <div className=\"col-12 col-md-9\">\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup row>\r\n                  <Col>\r\n                    <Label htmlFor=\"cityInput\" md={2}>\r\n                      City\r\n                    </Label>\r\n                    <br />\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"cityInput\"\r\n                      name=\"city\"\r\n                      placeholder=\"City\"\r\n                      md={10}\r\n                      required\r\n                      onChange={this.handleInputChange}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md={{ size: 10 }}>\r\n                    <br />\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                      Enter\r\n                    </Button>\r\n                  </Col>\r\n                </FormGroup>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"container\">\r\n          <div className=\"col-12 col-md-9\">{this.handleDisplay()}</div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Forms;\r\n","import Header from \"./components/header\";\r\nimport Forms from \"./components/form\";\r\nimport React from \"react\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Forms />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}